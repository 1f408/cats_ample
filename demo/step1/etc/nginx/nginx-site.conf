server {
	listen 80 default_server;
	listen [::]:80 default_server;

	include /etc/nginx/mime.types;
	charset UTF-8;
	charset_types text/plain;

	error_page 400 403 404 405 415 500 503 /error;
	location = /error {
		internal;
	}
	proxy_intercept_errors on;

	set $app_md 127.0.0.1:9001;

	set $raw_root /var/cats/var/www;
	set $md_root /var/cats/var/www_md;

	root $raw_root;

	proxy_http_version 1.1;

	location = /favicon.ico {
		access_log off;
		return 200;
	}

	location /font/ {
		location ~ \.woff2$ {
			add_header Cache-Control "max-age=2592000, public";
			gzip off;
		}
	}
	location /lib/ {
		add_header Cache-Control "max-age=86400, public";

		location ~ \.woff2$ {
			add_header Cache-Control "max-age=2592000, public";
			gzip off;
		}
	}
	location /css/ {
		add_header Cache-Control "max-age=86400, public";
	}
	location /js/ {
		add_header Cache-Control "max-age=86400, public";
	}

	set $index_name README.md;
	set $app_type none;
	if (-e $md_root/$uri) {
		set $app_type md;
	}
	if (-e $raw_root/$uri) {
		set $app_type raw;
	}

	if (-d $raw_root/$uri) {
		set $app_type dir;
	}

	if (-f $md_root/$uri/$index_name) {
		set $app_type md;
	}
	if (-f $raw_root/$uri/$index_name) {
		set $app_type raw;
	}

	location / {
		index $index_name;

		if ($app_type = md) {
			root $md_root;
		}

		location ~ (\.(md|markdown|txt|text|htm|html)|/)$ {
			proxy_hide_header Cache-Control;

			types {
				text/html htm html md;
				text/plain txt text;
			}

			if ($app_type = dir) {
				proxy_pass http://$app_md;
				add_header Cache-Control "max-age=30, must-revalidate, private";
				add_header X-Nginx-Cache-Status $upstream_cache_status;
			}
			if ($app_type = md) {
				proxy_pass http://$app_md;
				add_header Cache-Control "max-age=30, must-revalidate, private";
				add_header X-Nginx-Cache-Status $upstream_cache_status;
			}
		}
	}
}
